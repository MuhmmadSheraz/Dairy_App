[{"E:\\diaries-app\\src\\index.tsx":"1","E:\\diaries-app\\src\\reportWebVitals.ts":"2","E:\\diaries-app\\src\\App.tsx":"3","E:\\diaries-app\\src\\services\\mirage\\server.ts":"4","E:\\diaries-app\\src\\services\\mirage\\routes\\user.ts":"5","E:\\diaries-app\\src\\services\\api.ts":"6","E:\\diaries-app\\src\\utils.ts":"7","E:\\diaries-app\\src\\components\\Auth\\index.tsx":"8","E:\\diaries-app\\src\\store\\index.ts":"9","E:\\diaries-app\\src\\reducer\\rootReducer.ts":"10","E:\\diaries-app\\src\\reducer\\authReducer\\index.ts":"11","E:\\diaries-app\\src\\reducer\\userReducer\\index.ts":"12","E:\\diaries-app\\src\\config\\router.tsx":"13","E:\\diaries-app\\src\\components\\Home\\index.tsx":"14","E:\\diaries-app\\src\\components\\Navbar\\index.tsx":"15","E:\\diaries-app\\src\\services\\mirage\\routes\\dairy.ts":"16","E:\\diaries-app\\src\\reducer\\dairyReducer\\index.ts":"17","E:\\diaries-app\\src\\components\\Dairies\\index.tsx":"18","E:\\diaries-app\\src\\components\\Diary\\index.tsx":"19","E:\\diaries-app\\src\\services\\mirage\\routes\\entry.ts":"20","E:\\diaries-app\\src\\components\\Loader\\index.tsx":"21","E:\\diaries-app\\src\\components\\DiaryContent\\index.tsx":"22","E:\\diaries-app\\src\\components\\MyDiaries\\index.tsx":"23","E:\\diaries-app\\src\\reducer\\entryReducer\\index.ts":"24","E:\\diaries-app\\src\\Interfaces\\diary.interface.ts":"25"},{"size":742,"mtime":1608478011714,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":398,"mtime":1608716999412,"results":"29","hashOfConfig":"27"},{"size":1560,"mtime":1609273509298,"results":"30","hashOfConfig":"27"},{"size":1666,"mtime":1608960611510,"results":"31","hashOfConfig":"27"},{"size":963,"mtime":1608979120634,"results":"32","hashOfConfig":"27"},{"size":576,"mtime":1608461033461,"results":"33","hashOfConfig":"27"},{"size":4880,"mtime":1609369619255,"results":"34","hashOfConfig":"27"},{"size":188,"mtime":1608479413848,"results":"35","hashOfConfig":"27"},{"size":354,"mtime":1609185605608,"results":"36","hashOfConfig":"27"},{"size":848,"mtime":1609322741301,"results":"37","hashOfConfig":"27"},{"size":591,"mtime":1609337660995,"results":"38","hashOfConfig":"27"},{"size":1487,"mtime":1609369551342,"results":"39","hashOfConfig":"27"},{"size":3207,"mtime":1609367077252,"results":"40","hashOfConfig":"27"},{"size":2065,"mtime":1609369718977,"results":"41","hashOfConfig":"27"},{"size":1860,"mtime":1609340316222,"results":"42","hashOfConfig":"27"},{"size":3181,"mtime":1609341717886,"results":"43","hashOfConfig":"27"},{"size":1514,"mtime":1609367665233,"results":"44","hashOfConfig":"27"},{"size":1605,"mtime":1609366418056,"results":"45","hashOfConfig":"27"},{"size":1380,"mtime":1609409450519,"results":"46","hashOfConfig":"27"},{"size":288,"mtime":1609095652244,"results":"47","hashOfConfig":"27"},{"size":12207,"mtime":1609410815984,"results":"48","hashOfConfig":"27"},{"size":1405,"mtime":1609367341590,"results":"49","hashOfConfig":"27"},{"size":2498,"mtime":1609409536564,"results":"50","hashOfConfig":"27"},{"size":187,"mtime":1608890139873,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"oj2mi0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\diaries-app\\src\\index.tsx",[],["116","117"],"E:\\diaries-app\\src\\reportWebVitals.ts",[],"E:\\diaries-app\\src\\App.tsx",["118","119"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport $ from 'jquery';\n\nimport MainRouter from \"./config/router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Login /> */}\n      <MainRouter />  \n    </div>\n  );\n}\n\nexport default App;\n","E:\\diaries-app\\src\\services\\mirage\\server.ts",[],"E:\\diaries-app\\src\\services\\mirage\\routes\\user.ts",["120","121"],"import { Request, Response } from \"miragejs\";\r\nimport { handleError } from \"../server\";\r\nimport { User } from \"../../../Interfaces/user.interface\";\r\nimport { randomBytes } from \"crypto\";\r\n\r\nconst generateToken = () => randomBytes(8).toString(\"hex\");\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n//        Login...\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n  console.log(\"Schema===>\", schema);\r\n  console.log(\"Schema Data Base From Login===>\", JSON.parse(req.requestBody) );\r\n  const { userName, password,email } = JSON.parse(req.requestBody);\r\n  const user = schema.users.findBy({ userName }); // Will bring User Obj if Exits !\r\n  if (!user) {\r\n    return handleError(user, \"No user with that username exists\");\r\n  }\r\n  if (password !== user.password) {\r\n    return handleError(null, \"Incorrect Password, Please Try Again.\");\r\n  }\r\n  const token = generateToken(); //Token Will Generate..\r\n\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\n//              Sign Up...\r\nconst signup = (schema: any, req: Request): any => {\r\n  const data = JSON.parse(req.requestBody);\r\n  const exUser = schema.users.findBy({ userName: data.userName });\r\n  console.log(\"Sign Up Schema===>\", schema.users);\r\n  console.log(\"Sign Up data===>\", data);\r\n  console.log(\"found User\", exUser);\r\n  if (exUser) {\r\n    return handleError(null, \"A user with that username already exists.\");\r\n  }\r\n  const user = schema.users.create(data);\r\n  console.log(\"suspect User ==>\",user)\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\nexport default {\r\n  login,\r\n  signup,\r\n};\r\n","E:\\diaries-app\\src\\services\\api.ts",[],"E:\\diaries-app\\src\\utils.ts",[],"E:\\diaries-app\\src\\components\\Auth\\index.tsx",["122","123","124","125"],"import { useState, useEffect } from \"react\";\r\nimport \"./auth.css\";\r\nimport logo from \"../../assests/logo.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveToken } from \"../../reducer/authReducer\";\r\nimport { setUser } from \"../../reducer/userReducer\";\r\nimport http from \"../../services/api\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nimport { AuthResponse } from \"../../services/mirage/routes/user\";\r\nimport Loader from \"../Loader\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Login = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"email@email.com\");\r\n  const [password, setPassword] = useState<string>(\"1025454545454\");\r\n  const [loader, setLoader] = useState(false);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  interface userSide {\r\n    token: string;\r\n    user: {\r\n      diaryIds: null;\r\n      email: string;\r\n      id: string;\r\n      password: string;\r\n      userName: \"a\";\r\n    };\r\n  }\r\n\r\n  let obj = {\r\n    userName,\r\n    email,\r\n    password,\r\n    id: Math.floor(Math.random() * 100),\r\n  };\r\n  const login = () => {\r\n    if (userName === \"\" || password === \"\") {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"Please Fill All The Fields\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    const path = \"/auth/login\";\r\n    http.post<User | AuthResponse>(path, obj).then((res: userSide | any) => {\r\n      console.log(\"res Login==>\", res);\r\n      dispatch(\r\n        setUser({\r\n          user: res.user,\r\n        })\r\n      );\r\n      dispatch(\r\n        saveToken({\r\n          token: res.token,\r\n          isAuthenticated: true,\r\n        })\r\n      ); //Token\r\n    });\r\n    setLoader(false);\r\n    // setLoader(true);\r\n    // navigate.push(\"/home\");\r\n    // console.log(email, password, userName);\r\n\r\n    // console.log(\"stateData==>\", stateData);\r\n    setUserName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    // history.push(\"/home\");\r\n  };\r\n\r\n  const signUp = () => {\r\n    if (userName === \"\" || email === \"\" || password === \"\") {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"Please Fill All The Fields\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    const path = \"/auth/signup\";\r\n    http.post<User | AuthResponse>(path, obj).then((res: userSide | any) => {\r\n      console.log(\"res SignUp\", res);\r\n      dispatch(\r\n        setUser({\r\n          user: res.user,\r\n        })\r\n      );\r\n      dispatch(\r\n        saveToken({\r\n          token: res.token,\r\n          isAuthenticated: true,\r\n        })\r\n      ); //Token\r\n    });\r\n    // history.push(\"/home\");\r\n    // setLoader(false);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"AuthWrapper\">\r\n      <div className=\"cardWrapper pt-5\">\r\n        <div className=\"authcard p-5\">\r\n          {/* <img className=\"imageWrapper appLogo\" src={logo} alt=\"AppLogo\" /> */}\r\n          {isLogin ? <h2>Login</h2> : <h2>Sign Up</h2>}\r\n          <div className=\"py-2\">UserName</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            type=\"name\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            placeholder=\"UserName\"\r\n          />\r\n          <div className=\"py-2\">E-mail Address</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Optional \"\r\n          />\r\n          <div className=\"py-2\">Password</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            placeholder=\"Password\"\r\n            type=\"password  \"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {isLogin ? (\r\n            <button className=\"mt-3 btnLogin btn btn-block\" onClick={login}>\r\n              Login\r\n            </button>\r\n          ) : (\r\n            <button className=\"mt-3 btn btn-info btn-block\" onClick={signUp}>\r\n              Sign Up\r\n            </button>\r\n          )}\r\n          {isLogin ? (\r\n            <div className=\"text-center pt-3 \">\r\n              Don't Have Accout?{\" \"}\r\n              <span\r\n                className=\"text-primary hoverMe\"\r\n                onClick={() => setIsLogin(false)}\r\n              >\r\n                Create One\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center pt-3 \">\r\n              Already Have An Accoun?\r\n              <span\r\n                className=\"text-primary hoverMe\"\r\n                onClick={() => setIsLogin(true)}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\diaries-app\\src\\store\\index.ts",[],"E:\\diaries-app\\src\\reducer\\rootReducer.ts",[],"E:\\diaries-app\\src\\reducer\\authReducer\\index.ts",["126"],"import { createSlice, current, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface AuthState {\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n}\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n};\r\nexport const AuthSlice = createSlice({\r\n  name: \"AuthSlice\",\r\n  initialState,\r\n  reducers: {\r\n    saveToken: (state, { payload }: any) => {\r\n      if (payload) {\r\n        console.log(payload);\r\n        console.log(\"payload===>\", payload);\r\n        state.token = payload.token;\r\n        state.isAuthenticated = payload.isAuthenticated;\r\n      }\r\n    },\r\n    removeUser(state) {\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      console.log(\"remove State \", current(state));\r\n    },\r\n  },\r\n});\r\nexport const { saveToken, removeUser } = AuthSlice.actions;\r\nexport default AuthSlice.reducer;\r\n","E:\\diaries-app\\src\\reducer\\userReducer\\index.ts",["127"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nexport const userSlice = createSlice({\r\n  name: \"userSlice\",\r\n  initialState: null,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      console.log(\"action.payload from Reducer===>\", action.payload);\r\n      return (state = action.payload);\r\n    },\r\n    removerUserData: (state: any): any => {\r\n      state.user = null;\r\n      console.log(\"remove User\", state);\r\n    },\r\n  },\r\n});\r\nexport const { setUser, removerUserData } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","E:\\diaries-app\\src\\config\\router.tsx",["128","129","130","131"],"import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport { Login } from \"../components/Auth/index\";\r\nimport Home from \"../components/Home/index\";\r\nimport { connectAdvanced, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport DiaryContent from \"../components/DiaryContent\";\r\nimport MyDiaries from \"../components/MyDiaries\";\r\n\r\nexport default function MainRouter() {\r\n  const data = useSelector((state: any) => {\r\n    console.log(state);\r\n    return state.authReducer.isAuthenticated;\r\n  });\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  useEffect(() => {\r\n    console.log(\"Navbarr===>\", data);\r\n    setIsLogin(data);\r\n    console.log(\"navbar 222\", isLogin);\r\n  }, [data]);\r\n  console.log(data);\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\">\r\n        {isLogin ? <Redirect to=\"/home\" /> : <Login />}\r\n      </Route>\r\n      <Route path=\"/home\">\r\n        <Navbar />\r\n        {!isLogin ? <Redirect to=\"/\" /> : <Home />}\r\n      </Route>\r\n      {/* <Navbar />   */}\r\n      <Route path=\"/diary/:id/\">\r\n        <Navbar />\r\n        {/* {!isLogin ? <Redirect to=\"/\" /> : <DiaryContent />} */}\r\n        <DiaryContent />\r\n      </Route>\r\n      <Route path=\"/myDiaries/\">\r\n        {/* {!isLogin ? <Redirect to=\"/\" /> : <MyDiaries />} */}\r\n        <MyDiaries />\r\n      </Route>\r\n    </Router>\r\n  );\r\n}\r\n","E:\\diaries-app\\src\\components\\Home\\index.tsx",["132","133","134","135"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./home.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport http from \"../../services/api\";\r\nimport Dairies from \"../Dairies\";\r\nimport { postDiary } from \"../../reducer/dairyReducer\";\r\nimport { param } from \"jquery\";\r\nimport Navbar from \"../Navbar\";\r\nimport Swal from \"sweetalert2\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nimport { stateType } from \"../../types/types\";\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\nconst Home = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [scope, setScope] = useState<any>(\"\");\r\n  const [user, setUser] = useState<AuthResponse | User | any>();\r\n  const authUser: any = useSelector<AuthResponse | User | any>((state) => {\r\n    return state.userReducer;\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(\"Home render===>\");\r\n    setUser(authUser);\r\n  }, [authUser]);\r\n  const toggle = () => {\r\n    console.log(\"User************\", user);\r\n    setModal(!modal);\r\n  };\r\n  const create = async () => {\r\n    if (title === \"\" || scope === \"\") {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"Please Fill All The Fields\",\r\n      });\r\n    }\r\n    // New**************************\r\n    console.log(\"scopeeeeeeeeee=>\", scope);\r\n    let obj = {\r\n      title: title,\r\n      type: scope,\r\n      userId: user.user.id,\r\n      diaryId: Math.floor(Math.random() * 100),\r\n    };\r\n    await dispatch(postDiary(obj));\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <div className=\"homeWrapper\">\r\n      <Dairies />\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Add Dairy</ModalHeader>\r\n        <ModalBody>\r\n          <label className=\"font-weight-bold\">Dairy Name</label>\r\n          <br />\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Enter Dairy Name\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <br />\r\n          <div className=\"mt-3\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"public\"\r\n              name=\"scope\"\r\n              value=\"Public\"\r\n              className=\"radio\"\r\n              onChange={(e) => setScope(e.target.value)}\r\n            />\r\n            <label style={{ fontSize: \"18px\" }}>Public</label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"private\"\r\n              name=\"scope\"\r\n              value=\"private\"\r\n              className=\"radio\"\r\n              onChange={(e) => setScope(e.target.value)}\r\n            />\r\n            <label style={{ fontSize: \"18px\" }}>Private</label>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={create}>\r\n            Create\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <button className=\"float\" onClick={toggle}>\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\diaries-app\\src\\components\\Navbar\\index.tsx",["136","137","138","139"],"import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport { removeUser } from \"../../reducer/authReducer/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { removeDiaries } from \"../../reducer/dairyReducer\";\r\nimport { removerUserData } from \"../../reducer/userReducer\";\r\nimport { removeEntries } from \"../../reducer/entryReducer\";\r\nconst Navbar = () => {\r\n  const history=useHistory()\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => {\r\n    return state;\r\n  });\r\n  const logout = () => {\r\n    console.log(\"Logging Out Data\", data);\r\n    dispatch(removeUser());\r\n    dispatch(removerUserData());\r\n    dispatch(removeEntries());\r\n    history.push(\"/\")\r\n  };\r\n  return (\r\n    <div style={{ width: \"100vw\" }}>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n        <a className=\"navbar-brand font-weight-bold text-white\" href=\"#\">\r\n          DiaryApp\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link to=\"/home\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n\r\n            <Link to=\"/myDiaries/\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\">My Diaries</a>\r\n              </li>\r\n            </Link>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" onClick={logout}>\r\n                Logout\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\diaries-app\\src\\services\\mirage\\routes\\dairy.ts",["140"],"import dayjs from \"dayjs\";\r\nimport { Request, Response } from \"miragejs\";\r\nimport { useSelector } from \"react-redux\";\r\n// import Diary from \"../../../components/Diary\";\r\nimport { Diary } from \"../../../Interfaces/diary.interface\";\r\nimport { User } from \"../../../Interfaces/user.interface\";\r\nimport { handleError } from \"../server\";\r\n\r\nexport const create = (\r\n  schema: any,\r\n  req: Request\r\n): { user: User; diary: Diary } | Response => {\r\n  try {\r\n    const { title, type, userId } = JSON.parse(\r\n      req.requestBody\r\n    ) as Partial<Diary>;\r\n    const exUser = schema.users.findBy({ id: userId });\r\n    if (!exUser) {\r\n      return handleError(null, \"No such user exists.\");\r\n    }\r\n    console.log(\"Ex User \", exUser);\r\n    const now = dayjs().format();\r\n    const diary = exUser.createDiary({\r\n      title,\r\n      type,\r\n      createdAt: now,\r\n      updatedAt: now,\r\n      userId,\r\n    });\r\n    console.log(\"To be dairy \", diary);\r\n    return {\r\n      user: {\r\n        ...exUser.attrs,\r\n      },\r\n      diary: diary.attrs,\r\n    };\r\n  } catch (error) {\r\n    return handleError(error, \"Failed to create Diary.\");\r\n  }\r\n};\r\n\r\nexport const getDiaries = (schema: any, req: Request): Diary[] | Response => {\r\n  console.log(req.params.id);\r\n  try {\r\n    const user = schema.users.find(req.params.id);\r\n    return user.diary as Diary[];\r\n  } catch (error) {\r\n    return handleError(error, \"Could not get user diaries.\");\r\n  }\r\n};\r\nexport const updateDiary = (schema: any, req: Request): Diary[] | Response => {\r\n  try {\r\n    console.log(\"Without JSON\", req.requestBody);\r\n    const diary = schema.diaries.find(req.params.id);\r\n    const data = JSON.parse(req.requestBody);\r\n    console.log(\"Update diary Content To be==>\", data);\r\n    diary.update({\r\n      ...data,\r\n    });\r\n    return diary.attrs;\r\n  } catch (err) {\r\n    return handleError(err);\r\n  }\r\n};\r\n","E:\\diaries-app\\src\\reducer\\dairyReducer\\index.ts",["141","142"],"import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport http from \"../../services/api\";\r\n\r\n//Interfaces\r\ninterface FulfilledAction<ThunkArg, PromiseResult> {\r\n  type: string;\r\n  payload: PromiseResult;\r\n  meta: {\r\n    requestId: string;\r\n    arg: ThunkArg;\r\n  };\r\n}\r\n\r\ntype Fulfilled = <ThunkArg, PromiseResult>(\r\n  payload: PromiseResult,\r\n  requestId: string,\r\n  arg: ThunkArg\r\n) => FulfilledAction<ThunkArg, PromiseResult>;\r\n\r\nexport const postDiary: any = createAsyncThunk(\r\n  \"/diaries/:id\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called\", obj);\r\n    const response = await http.post(`/diaries/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const updateDiaryContent: any = createAsyncThunk(\r\n  \"/s\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Update Diary\", obj);\r\n    const response = await http.put(`/diaries/${obj.id}`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return response;\r\n  }\r\n);\r\nexport const DairySlice = createSlice({\r\n  initialState: {\r\n    diaries: [],\r\n  },\r\n  name: \"DairySlice\",\r\n  reducers: {\r\n    addDairyData: (state, { payload }): any => {\r\n      console.log(\"Action PayLoad ==>\", payload);\r\n      const data: any = payload;\r\n      console.log(\"data forom Reducer\", data);\r\n      state.diaries = data;\r\n    },\r\n    removeDiaries: (state): any => {\r\n      state.diaries = [];\r\n      console.log(\"remove User\", state);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [postDiary.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload.diary;\r\n      const newObj = Object.assign({}, data);\r\n      state.diaries = [...state.diaries, newObj];\r\n      // }\r\n    },\r\n    [postDiary.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [postDiary.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n    [updateDiaryContent.fulfilled]: (state: any, action: any) => {\r\n      console.log(\"Param Info ====>\", action.payload);\r\n      const data: any = action.payload;\r\n      const { id } = data;\r\n      const newObj = Object.assign({}, data);\r\n      console.log(\"State Diarieeeeeeeeeeees\", current(state.diaries));\r\n      const diaryIndex = current(state.diaries).findIndex((diary: any) => diary.id === id);\r\n\r\n      // const diaryIndex = current(state.diaries).find((diary: any) => id === id);\r\n      console.log(\"find Data===>\", diaryIndex);\r\n      if (diaryIndex !== -1) {\r\n        console.log(\"find Data===>\", diaryIndex);\r\n        state.diaries.splice(diaryIndex, 1, data);\r\n        console.log(\"List===>\", current(state.diaries));\r\n      }\r\n      // state.splice(diaryIndex, 1, data);\r\n\r\n      // state.diaries = [...state.diaries, newObj];\r\n      // }\r\n    },\r\n    [updateDiaryContent.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [updateDiaryContent.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addDairyData, removeDiaries } = DairySlice.actions;\r\nexport default DairySlice.reducer;\r\n","E:\\diaries-app\\src\\components\\Dairies\\index.tsx",["143"],"import Diary from \"../Diary\";\r\nimport \"./diary.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\ninterface state {\r\n  authReducer: {};\r\n  dairyReducer: {\r\n    diaries: [];\r\n  };\r\n  entryReducer: {\r\n    entries: {};\r\n  };\r\n  userReducer: {};\r\n}\r\ninterface diary {\r\n  createdAt: string;\r\n  entryIds: null;\r\n  id: string;\r\n  title: string;\r\n  type: string;\r\n  updatedAt: string;\r\n  userId: string;\r\n}\r\nconst Dairies = () => {\r\n  const [diaries, setDiaries]: any = useState<diary[]>([]);\r\n  const data = useSelector((state: state) => {\r\n    console.log(\"typeeeeeeeeeeeeeee===>\", state);\r\n    return state.dairyReducer.diaries;\r\n  });\r\n  useEffect(() => {\r\n    console.log(\"object--------------------------\");\r\n    setDiaries(data);\r\n    console.log(\"diaries\", data);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"diariesWrapper text-center\" style={{ margin:\"0 auto\" }}>\r\n      <div\r\n        className=\"container-fluid text-center\"\r\n        style={{ margin:\"0 auto\" }}\r\n      >\r\n        <div className=\"row  no-gutters    pt-3\">\r\n          {diaries &&\r\n            diaries.map((item: diary, index: string) => {\r\n              if (item.type === \"Public\") {\r\n                return (\r\n                  <div className=\"col-md-3 p-0 m-1 \" key={index} >\r\n                    <Diary data={item} editable={false} />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dairies;\r\n","E:\\diaries-app\\src\\components\\Diary\\index.tsx",["144","145","146","147","148","149","150","151","152"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport http from \"../../services/api\";\r\nimport \"./diary.css\";\r\nimport { addEntryReducer } from \"../../reducer/entryReducer\";\r\ninterface diary {\r\n  createdAt: string;\r\n  entryIds: null;\r\n  id: string;\r\n  title: string;\r\n  type: string;\r\n  updatedAt: string;\r\n  userId: string;\r\n}\r\nconst Diary = ({ data, editable }: { data: diary; editable: boolean }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className=\"DiaryCard\"\r\n      onClick={() => history.push(`/diary/${data.id}/`)}\r\n    >\r\n      <h2 className=\"text-white px-2 py-2 text-left\">{data.title}</h2>\r\n      <p className=\"text-info\">\r\n        Created At: <span className=\"text-white\">{data.createdAt}</span>{\" \"}\r\n      </p>\r\n      <p className=\"text-warning\">\r\n        Updated At: <span className=\"text-white\">{data.updatedAt}</span>{\" \"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n{\r\n  /* <Link to=\"/diary\">\r\n       Diary\r\n     </Link> */\r\n}\r\n{\r\n  /* <p>Updated At: {data.updatedAt}</p> */\r\n}\r\n{\r\n  /* <p className=\"text-muted\">Created At {data.createdAt}</p> */\r\n}\r\n{\r\n  /* <p className=\"text-muted\">Updated At {data.updatedAt}</p> */\r\n}\r\n{\r\n  /* Diary Type <span className=\"text-info mx-2\">{data.type}</span>\r\n      <button className=\"btn btn-success\" onClick={() => addEntry(data.id)}>\r\n        Add Entry\r\n      </button>\r\n      <button className=\"btn btn-success\" onClick={() => getEntry(data.id)}>\r\n        Get Entry\r\n      </button> */\r\n}\r\n","E:\\diaries-app\\src\\services\\mirage\\routes\\entry.ts",[],"E:\\diaries-app\\src\\components\\Loader\\index.tsx",[],"E:\\diaries-app\\src\\components\\DiaryContent\\index.tsx",["153","154","155","156","157","158","159","160"],"E:\\diaries-app\\src\\components\\MyDiaries\\index.tsx",["161","162"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DiaryType, stateType } from \"../../types/types\";\r\nimport Diary from \"../Diary\";\r\nimport Navbar from \"../Navbar\";\r\ninterface diary {\r\n  createdAt: string;\r\n  entryIds: null;\r\n  id: string;\r\n  title: string;\r\n  type: string;\r\n  updatedAt: string;\r\n  userId: string;\r\n}\r\nconst MyDiaries = () => {\r\n  const [diaries, setDiaries] = useState<any>([]);\r\n  const data = useSelector((state: stateType) => {\r\n    return state.dairyReducer.diaries;\r\n  });\r\n  const user = useSelector((state: stateType | any) => {\r\n    return state.userReducer.user;\r\n  });\r\n  useEffect(() => {\r\n    console.log(user);\r\n    console.log(data);\r\n    const mine = data.filter((x: DiaryType) => x.userId === user.id);\r\n    console.log(mine);\r\n    setDiaries(mine);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"diaryContentWrapper \">\r\n      <Navbar />\r\n\r\n      <div className=\"row  no-gutters justify-content-center pt-3\">\r\n        {diaries &&\r\n          diaries.map((item: diary, index: string) => {\r\n            if (item.type === \"Public\") {\r\n              return (\r\n                <div className=\"col-md-3 p-0 m-1 \" key={index}>\r\n                  <Diary data={item} editable={false} />\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDiaries;\r\n","E:\\diaries-app\\src\\reducer\\entryReducer\\index.ts",["163","164"],"E:\\diaries-app\\src\\Interfaces\\diary.interface.ts",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":12},{"ruleId":"169","severity":1,"message":"173","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":9},{"ruleId":"169","severity":1,"message":"174","line":15,"column":30,"nodeType":"171","messageId":"172","endLine":15,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":49,"column":1,"nodeType":"177","endLine":52,"endColumn":3},{"ruleId":"169","severity":1,"message":"178","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":12},{"ruleId":"169","severity":1,"message":"179","line":4,"column":23,"nodeType":"171","messageId":"172","endLine":4,"endColumn":34},{"ruleId":"169","severity":1,"message":"180","line":21,"column":7,"nodeType":"171","messageId":"172","endLine":21,"endColumn":14},{"ruleId":"169","severity":1,"message":"181","line":1,"column":32,"nodeType":"171","messageId":"172","endLine":1,"endColumn":45},{"ruleId":"169","severity":1,"message":"182","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"183","line":3,"column":3,"nodeType":"171","messageId":"172","endLine":3,"endColumn":9},{"ruleId":"169","severity":1,"message":"184","line":5,"column":3,"nodeType":"171","messageId":"172","endLine":5,"endColumn":7},{"ruleId":"169","severity":1,"message":"185","line":11,"column":10,"nodeType":"171","messageId":"172","endLine":11,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":28,"column":6,"nodeType":"188","endLine":28,"endColumn":12,"suggestions":"189"},{"ruleId":"169","severity":1,"message":"190","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":12},{"ruleId":"169","severity":1,"message":"191","line":8,"column":10,"nodeType":"171","messageId":"172","endLine":8,"endColumn":15},{"ruleId":"169","severity":1,"message":"192","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":14},{"ruleId":"169","severity":1,"message":"193","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":19},{"ruleId":"169","severity":1,"message":"194","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":23},{"ruleId":"195","severity":1,"message":"196","line":25,"column":9,"nodeType":"197","endLine":25,"endColumn":74},{"ruleId":"195","severity":1,"message":"198","line":49,"column":17,"nodeType":"197","endLine":49,"endColumn":41},{"ruleId":"195","severity":1,"message":"198","line":54,"column":15,"nodeType":"197","endLine":54,"endColumn":56},{"ruleId":"169","severity":1,"message":"179","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":21},{"ruleId":"169","severity":1,"message":"199","line":14,"column":6,"nodeType":"171","messageId":"172","endLine":14,"endColumn":15},{"ruleId":"169","severity":1,"message":"200","line":72,"column":13,"nodeType":"171","messageId":"172","endLine":72,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":43,"column":54,"nodeType":"203","messageId":"204","endLine":43,"endColumn":56},{"ruleId":"169","severity":1,"message":"184","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"205","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":21},{"ruleId":"169","severity":1,"message":"190","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":12},{"ruleId":"169","severity":1,"message":"206","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":37,"column":1,"nodeType":"209","messageId":"210","endLine":41,"endColumn":2},{"ruleId":"207","severity":1,"message":"208","line":42,"column":1,"nodeType":"209","messageId":"210","endLine":44,"endColumn":2},{"ruleId":"207","severity":1,"message":"208","line":45,"column":1,"nodeType":"209","messageId":"210","endLine":47,"endColumn":2},{"ruleId":"207","severity":1,"message":"208","line":48,"column":1,"nodeType":"209","messageId":"210","endLine":50,"endColumn":2},{"ruleId":"207","severity":1,"message":"208","line":51,"column":1,"nodeType":"209","messageId":"210","endLine":59,"endColumn":2},{"ruleId":"169","severity":1,"message":"211","line":25,"column":18,"nodeType":"171","messageId":"172","endLine":25,"endColumn":22},{"ruleId":"169","severity":1,"message":"212","line":30,"column":10,"nodeType":"171","messageId":"172","endLine":30,"endColumn":19},{"ruleId":"169","severity":1,"message":"193","line":30,"column":32,"nodeType":"171","messageId":"172","endLine":30,"endColumn":41},{"ruleId":"169","severity":1,"message":"213","line":31,"column":10,"nodeType":"171","messageId":"172","endLine":31,"endColumn":15},{"ruleId":"169","severity":1,"message":"182","line":32,"column":10,"nodeType":"171","messageId":"172","endLine":32,"endColumn":14},{"ruleId":"186","severity":1,"message":"214","line":101,"column":6,"nodeType":"188","endLine":101,"endColumn":27,"suggestions":"215"},{"ruleId":"186","severity":1,"message":"216","line":112,"column":6,"nodeType":"188","endLine":112,"endColumn":8,"suggestions":"217"},{"ruleId":"207","severity":1,"message":"218","line":128,"column":5,"nodeType":"209","messageId":"219","endLine":130,"endColumn":6},{"ruleId":"186","severity":1,"message":"220","line":29,"column":6,"nodeType":"188","endLine":29,"endColumn":12,"suggestions":"221"},{"ruleId":"201","severity":1,"message":"202","line":36,"column":52,"nodeType":"203","messageId":"204","endLine":36,"endColumn":54},{"ruleId":"169","severity":1,"message":"222","line":1,"column":41,"nodeType":"171","messageId":"172","endLine":1,"endColumn":48},{"ruleId":"169","severity":1,"message":"223","line":3,"column":11,"nodeType":"171","messageId":"172","endLine":3,"endColumn":26},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'email' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'history' is assigned a value but never used.","'PayloadAction' is defined but never used.","'User' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'connectAdvanced' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLogin'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'http' is defined but never used.","'param' is defined but never used.","'Navbar' is defined but never used.","'stateType' is defined but never used.","'removeDiaries' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fulfilled' is defined but never used.","'newObj' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useDispatch' is defined but never used.","'addEntryReducer' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Form' is defined but never used.","'DiaryType' is defined but never used.","'Diary' is defined but never used.","React Hook useEffect has missing dependencies: 'diary', 'entry', 'id', 'isEditable', and 'user'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'getEntry' and 'id'. Either include them or remove the dependency array.",["228"],"Nested block is redundant.","redundantNestedBlock","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["229"],"'current' is defined but never used.","'FulfilledAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [data, isLogin]",{"range":"238","text":"239"},"Update the dependencies array to be: [allDiaries, diary, entries, entry, id, isEditable, user]",{"range":"240","text":"241"},"Update the dependencies array to be: [getEntry, id]",{"range":"242","text":"243"},"Update the dependencies array to be: [data, user]",{"range":"244","text":"245"},[853,859],"[data, isLogin]",[3918,3939],"[allDiaries, diary, entries, entry, id, isEditable, user]",[4284,4286],"[getEntry, id]",[845,851],"[data, user]"]