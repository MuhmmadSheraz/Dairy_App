[{"E:\\diaries-app\\src\\index.tsx":"1","E:\\diaries-app\\src\\reportWebVitals.ts":"2","E:\\diaries-app\\src\\App.tsx":"3","E:\\diaries-app\\src\\services\\mirage\\server.ts":"4","E:\\diaries-app\\src\\services\\mirage\\routes\\user.ts":"5","E:\\diaries-app\\src\\services\\api.ts":"6","E:\\diaries-app\\src\\utils.ts":"7","E:\\diaries-app\\src\\components\\Auth\\index.tsx":"8","E:\\diaries-app\\src\\store\\index.ts":"9","E:\\diaries-app\\src\\reducer\\rootReducer.ts":"10","E:\\diaries-app\\src\\reducer\\authReducer\\index.ts":"11","E:\\diaries-app\\src\\reducer\\userReducer\\index.ts":"12","E:\\diaries-app\\src\\config\\router.tsx":"13","E:\\diaries-app\\src\\components\\Home\\index.tsx":"14","E:\\diaries-app\\src\\components\\Navbar\\index.tsx":"15","E:\\diaries-app\\src\\services\\mirage\\routes\\dairy.ts":"16","E:\\diaries-app\\src\\reducer\\dairyReducer\\index.ts":"17","E:\\diaries-app\\src\\components\\Dairies\\index.tsx":"18","E:\\diaries-app\\src\\components\\Diary\\index.tsx":"19","E:\\diaries-app\\src\\services\\mirage\\routes\\entry.ts":"20","E:\\diaries-app\\src\\components\\Loader\\index.tsx":"21","E:\\diaries-app\\src\\components\\DiaryContent\\index.tsx":"22","E:\\diaries-app\\src\\components\\MyDiaries\\index.tsx":"23","E:\\diaries-app\\src\\reducer\\entryReducer\\index.ts":"24","E:\\diaries-app\\src\\Interfaces\\diary.interface.ts":"25"},{"size":742,"mtime":1608478011714,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":398,"mtime":1608716999412,"results":"29","hashOfConfig":"27"},{"size":1560,"mtime":1609273509298,"results":"30","hashOfConfig":"27"},{"size":1666,"mtime":1608960611510,"results":"31","hashOfConfig":"27"},{"size":963,"mtime":1608979120634,"results":"32","hashOfConfig":"27"},{"size":576,"mtime":1608461033461,"results":"33","hashOfConfig":"27"},{"size":4849,"mtime":1609358051905,"results":"34","hashOfConfig":"27"},{"size":188,"mtime":1608479413848,"results":"35","hashOfConfig":"27"},{"size":354,"mtime":1609185605608,"results":"36","hashOfConfig":"27"},{"size":848,"mtime":1609322741301,"results":"37","hashOfConfig":"27"},{"size":591,"mtime":1609337660995,"results":"38","hashOfConfig":"27"},{"size":1487,"mtime":1609367231572,"results":"39","hashOfConfig":"27"},{"size":3207,"mtime":1609367077252,"results":"40","hashOfConfig":"27"},{"size":2000,"mtime":1609342346601,"results":"41","hashOfConfig":"27"},{"size":1860,"mtime":1609340316222,"results":"42","hashOfConfig":"27"},{"size":3181,"mtime":1609341717886,"results":"43","hashOfConfig":"27"},{"size":1514,"mtime":1609367665233,"results":"44","hashOfConfig":"27"},{"size":1605,"mtime":1609366418056,"results":"45","hashOfConfig":"27"},{"size":1382,"mtime":1609273315533,"results":"46","hashOfConfig":"27"},{"size":288,"mtime":1609095652244,"results":"47","hashOfConfig":"27"},{"size":11772,"mtime":1609367793750,"results":"48","hashOfConfig":"27"},{"size":1405,"mtime":1609367341590,"results":"49","hashOfConfig":"27"},{"size":2500,"mtime":1609349820554,"results":"50","hashOfConfig":"27"},{"size":187,"mtime":1608890139873,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"oj2mi0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\diaries-app\\src\\index.tsx",[],["112","113"],"E:\\diaries-app\\src\\reportWebVitals.ts",[],"E:\\diaries-app\\src\\App.tsx",["114","115"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport $ from 'jquery';\n\nimport MainRouter from \"./config/router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Login /> */}\n      <MainRouter />  \n    </div>\n  );\n}\n\nexport default App;\n","E:\\diaries-app\\src\\services\\mirage\\server.ts",[],"E:\\diaries-app\\src\\services\\mirage\\routes\\user.ts",["116","117"],"import { Request, Response } from \"miragejs\";\r\nimport { handleError } from \"../server\";\r\nimport { User } from \"../../../Interfaces/user.interface\";\r\nimport { randomBytes } from \"crypto\";\r\n\r\nconst generateToken = () => randomBytes(8).toString(\"hex\");\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n//        Login...\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n  console.log(\"Schema===>\", schema);\r\n  console.log(\"Schema Data Base From Login===>\", JSON.parse(req.requestBody) );\r\n  const { userName, password,email } = JSON.parse(req.requestBody);\r\n  const user = schema.users.findBy({ userName }); // Will bring User Obj if Exits !\r\n  if (!user) {\r\n    return handleError(user, \"No user with that username exists\");\r\n  }\r\n  if (password !== user.password) {\r\n    return handleError(null, \"Incorrect Password, Please Try Again.\");\r\n  }\r\n  const token = generateToken(); //Token Will Generate..\r\n\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\n//              Sign Up...\r\nconst signup = (schema: any, req: Request): any => {\r\n  const data = JSON.parse(req.requestBody);\r\n  const exUser = schema.users.findBy({ userName: data.userName });\r\n  console.log(\"Sign Up Schema===>\", schema.users);\r\n  console.log(\"Sign Up data===>\", data);\r\n  console.log(\"found User\", exUser);\r\n  if (exUser) {\r\n    return handleError(null, \"A user with that username already exists.\");\r\n  }\r\n  const user = schema.users.create(data);\r\n  console.log(\"suspect User ==>\",user)\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\nexport default {\r\n  login,\r\n  signup,\r\n};\r\n","E:\\diaries-app\\src\\services\\api.ts",[],"E:\\diaries-app\\src\\utils.ts",[],"E:\\diaries-app\\src\\components\\Auth\\index.tsx",["118","119","120"],"import { useState, useEffect } from \"react\";\r\nimport \"./auth.css\";\r\nimport logo from \"../../assests/logo.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveToken } from \"../../reducer/authReducer\";\r\nimport { setUser } from \"../../reducer/userReducer\";\r\nimport http from \"../../services/api\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nimport { AuthResponse } from \"../../services/mirage/routes/user\";\r\nimport Loader from \"../Loader\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Login = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"email@email.com\");\r\n  const [password, setPassword] = useState<string>(\"1025454545454\");\r\n  const [loader, setLoader] = useState(false);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  interface userSide {\r\n    token: string;\r\n    user: {\r\n      diaryIds: null;\r\n      email: string;\r\n      id: string;\r\n      password: string;\r\n      userName: \"a\";\r\n    };\r\n  }\r\n\r\n  let obj = {\r\n    userName,\r\n    email,\r\n    password,\r\n    id: Math.floor(Math.random() * 100),\r\n  };\r\n  const login = () => {\r\n    if (userName === \"\" || password === \"\") {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"Please Fill All The Fields\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    const path = \"/auth/login\";\r\n    http.post<User | AuthResponse>(path, obj).then((res: userSide | any) => {\r\n      console.log(\"res Login==>\", res);\r\n      dispatch(\r\n        setUser({\r\n          user: res.user,\r\n        })\r\n      );\r\n      dispatch(\r\n        saveToken({\r\n          token: res.token,\r\n          isAuthenticated: true,\r\n        })\r\n      ); //Token\r\n    });\r\n    setLoader(false);\r\n    // navigate.push(\"/home\");\r\n    // console.log(email, password, userName);\r\n\r\n    // console.log(\"stateData==>\", stateData);\r\n    setUserName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    // history.push(\"/home\");\r\n  };\r\n\r\n  const signUp = () => {\r\n    if (userName === \"\" || email === \"\" || password === \"\") {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        text: \"Please Fill All The Fields\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    const path = \"/auth/signup\";\r\n    http.post<User | AuthResponse>(path, obj).then((res: userSide | any) => {\r\n      console.log(\"res SignUp\", res);\r\n      dispatch(\r\n        setUser({\r\n          user: res.user,\r\n        })\r\n      );\r\n      dispatch(\r\n        saveToken({\r\n          token: res.token,\r\n          isAuthenticated: true,\r\n        })\r\n      ); //Token\r\n    });\r\n    history.push(\"/home\");\r\n    setLoader(false);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"AuthWrapper\">\r\n      <div className=\"cardWrapper pt-5\">\r\n        <div className=\"authcard p-5\">\r\n          {/* <img className=\"imageWrapper appLogo\" src={logo} alt=\"AppLogo\" /> */}\r\n          {isLogin ? <h2>Login</h2> : <h2>Sign Up</h2>}\r\n          <div className=\"py-2\">UserName</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            type=\"name\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            placeholder=\"UserName\"\r\n          />\r\n          <div className=\"py-2\">E-mail Address</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Optional \"\r\n          />\r\n          <div className=\"py-2\">Password</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            placeholder=\"Password\"\r\n            type=\"password  \"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {isLogin ? (\r\n            <button className=\"mt-3 btnLogin btn btn-block\" onClick={login}>\r\n              Login\r\n            </button>\r\n          ) : (\r\n            <button className=\"mt-3 btn btn-info btn-block\" onClick={signUp}>\r\n              Sign Up\r\n            </button>\r\n          )}\r\n          {isLogin ? (\r\n            <div className=\"text-center pt-3 \">\r\n              Don't Have Accout?{\" \"}\r\n              <span\r\n                className=\"text-primary hoverMe\"\r\n                onClick={() => setIsLogin(false)}\r\n              >\r\n                Create One\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center pt-3 \">\r\n              Already Have An Accoun?\r\n              <span\r\n                className=\"text-primary hoverMe\"\r\n                onClick={() => setIsLogin(true)}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\diaries-app\\src\\store\\index.ts",[],"E:\\diaries-app\\src\\reducer\\rootReducer.ts",[],"E:\\diaries-app\\src\\reducer\\authReducer\\index.ts",["121"],"import { createSlice, current, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface AuthState {\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n}\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n};\r\nexport const AuthSlice = createSlice({\r\n  name: \"AuthSlice\",\r\n  initialState,\r\n  reducers: {\r\n    saveToken: (state, { payload }: any) => {\r\n      if (payload) {\r\n        console.log(payload);\r\n        console.log(\"payload===>\", payload);\r\n        state.token = payload.token;\r\n        state.isAuthenticated = payload.isAuthenticated;\r\n      }\r\n    },\r\n    removeUser(state) {\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      console.log(\"remove State \", current(state));\r\n    },\r\n  },\r\n});\r\nexport const { saveToken, removeUser } = AuthSlice.actions;\r\nexport default AuthSlice.reducer;\r\n","E:\\diaries-app\\src\\reducer\\userReducer\\index.ts",["122"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nexport const userSlice = createSlice({\r\n  name: \"userSlice\",\r\n  initialState: null,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      console.log(\"action.payload from Reducer===>\", action.payload);\r\n      return (state = action.payload);\r\n    },\r\n    removerUserData: (state: any): any => {\r\n      state.user = null;\r\n      console.log(\"remove User\", state);\r\n    },\r\n  },\r\n});\r\nexport const { setUser, removerUserData } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","E:\\diaries-app\\src\\config\\router.tsx",["123","124","125","126"],"E:\\diaries-app\\src\\components\\Home\\index.tsx",["127","128","129","130"],"E:\\diaries-app\\src\\components\\Navbar\\index.tsx",["131","132","133","134"],"import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport { removeUser } from \"../../reducer/authReducer/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeDiaries } from \"../../reducer/dairyReducer\";\r\nimport { removerUserData } from \"../../reducer/userReducer\";\r\nimport { removeEntries } from \"../../reducer/entryReducer\";\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => {\r\n    return state;\r\n  });\r\n  const logout = () => {\r\n    console.log(\"Logging Out Data\", data);\r\n    dispatch(removeUser());\r\n    dispatch(removerUserData());\r\n    dispatch(removeEntries());\r\n  };\r\n  return (\r\n    <div style={{ width: \"100vw\" }}>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n        <a className=\"navbar-brand font-weight-bold text-white\" href=\"#\">\r\n          DiaryApp\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link to=\"/home\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n\r\n            <Link to=\"/myDiaries/\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\">My Diaries</a>\r\n              </li>\r\n            </Link>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" onClick={logout}>\r\n                Logout\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\diaries-app\\src\\services\\mirage\\routes\\dairy.ts",["135"],"import dayjs from \"dayjs\";\r\nimport { Request, Response } from \"miragejs\";\r\nimport { useSelector } from \"react-redux\";\r\n// import Diary from \"../../../components/Diary\";\r\nimport { Diary } from \"../../../Interfaces/diary.interface\";\r\nimport { User } from \"../../../Interfaces/user.interface\";\r\nimport { handleError } from \"../server\";\r\n\r\nexport const create = (\r\n  schema: any,\r\n  req: Request\r\n): { user: User; diary: Diary } | Response => {\r\n  try {\r\n    const { title, type, userId } = JSON.parse(\r\n      req.requestBody\r\n    ) as Partial<Diary>;\r\n    const exUser = schema.users.findBy({ id: userId });\r\n    if (!exUser) {\r\n      return handleError(null, \"No such user exists.\");\r\n    }\r\n    console.log(\"Ex User \", exUser);\r\n    const now = dayjs().format();\r\n    const diary = exUser.createDiary({\r\n      title,\r\n      type,\r\n      createdAt: now,\r\n      updatedAt: now,\r\n      userId,\r\n    });\r\n    console.log(\"To be dairy \", diary);\r\n    return {\r\n      user: {\r\n        ...exUser.attrs,\r\n      },\r\n      diary: diary.attrs,\r\n    };\r\n  } catch (error) {\r\n    return handleError(error, \"Failed to create Diary.\");\r\n  }\r\n};\r\n\r\nexport const getDiaries = (schema: any, req: Request): Diary[] | Response => {\r\n  console.log(req.params.id);\r\n  try {\r\n    const user = schema.users.find(req.params.id);\r\n    return user.diary as Diary[];\r\n  } catch (error) {\r\n    return handleError(error, \"Could not get user diaries.\");\r\n  }\r\n};\r\nexport const updateDiary = (schema: any, req: Request): Diary[] | Response => {\r\n  try {\r\n    console.log(\"Without JSON\", req.requestBody);\r\n    const diary = schema.diaries.find(req.params.id);\r\n    const data = JSON.parse(req.requestBody);\r\n    console.log(\"Update diary Content To be==>\", data);\r\n    diary.update({\r\n      ...data,\r\n    });\r\n    return diary.attrs;\r\n  } catch (err) {\r\n    return handleError(err);\r\n  }\r\n};\r\n","E:\\diaries-app\\src\\reducer\\dairyReducer\\index.ts",["136","137"],"import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport http from \"../../services/api\";\r\n\r\n//Interfaces\r\ninterface FulfilledAction<ThunkArg, PromiseResult> {\r\n  type: string;\r\n  payload: PromiseResult;\r\n  meta: {\r\n    requestId: string;\r\n    arg: ThunkArg;\r\n  };\r\n}\r\n\r\ntype Fulfilled = <ThunkArg, PromiseResult>(\r\n  payload: PromiseResult,\r\n  requestId: string,\r\n  arg: ThunkArg\r\n) => FulfilledAction<ThunkArg, PromiseResult>;\r\n\r\nexport const postDiary: any = createAsyncThunk(\r\n  \"/diaries/:id\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called\", obj);\r\n    const response = await http.post(`/diaries/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const updateDiaryContent: any = createAsyncThunk(\r\n  \"/s\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Update Diary\", obj);\r\n    const response = await http.put(`/diaries/${obj.id}`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return response;\r\n  }\r\n);\r\nexport const DairySlice = createSlice({\r\n  initialState: {\r\n    diaries: [],\r\n  },\r\n  name: \"DairySlice\",\r\n  reducers: {\r\n    addDairyData: (state, { payload }): any => {\r\n      console.log(\"Action PayLoad ==>\", payload);\r\n      const data: any = payload;\r\n      console.log(\"data forom Reducer\", data);\r\n      state.diaries = data;\r\n    },\r\n    removeDiaries: (state): any => {\r\n      state.diaries = [];\r\n      console.log(\"remove User\", state);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [postDiary.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload.diary;\r\n      const newObj = Object.assign({}, data);\r\n      state.diaries = [...state.diaries, newObj];\r\n      // }\r\n    },\r\n    [postDiary.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [postDiary.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n    [updateDiaryContent.fulfilled]: (state: any, action: any) => {\r\n      console.log(\"Param Info ====>\", action.payload);\r\n      const data: any = action.payload;\r\n      const { id } = data;\r\n      const newObj = Object.assign({}, data);\r\n      console.log(\"State Diarieeeeeeeeeeees\", current(state.diaries));\r\n      const diaryIndex = current(state.diaries).findIndex((diary: any) => diary.id === id);\r\n\r\n      // const diaryIndex = current(state.diaries).find((diary: any) => id === id);\r\n      console.log(\"find Data===>\", diaryIndex);\r\n      if (diaryIndex !== -1) {\r\n        console.log(\"find Data===>\", diaryIndex);\r\n        state.diaries.splice(diaryIndex, 1, data);\r\n        console.log(\"List===>\", current(state.diaries));\r\n      }\r\n      // state.splice(diaryIndex, 1, data);\r\n\r\n      // state.diaries = [...state.diaries, newObj];\r\n      // }\r\n    },\r\n    [updateDiaryContent.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [updateDiaryContent.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addDairyData, removeDiaries } = DairySlice.actions;\r\nexport default DairySlice.reducer;\r\n","E:\\diaries-app\\src\\components\\Dairies\\index.tsx",["138"],"E:\\diaries-app\\src\\components\\Diary\\index.tsx",["139","140","141","142","143","144","145","146","147"],"E:\\diaries-app\\src\\services\\mirage\\routes\\entry.ts",[],"E:\\diaries-app\\src\\components\\Loader\\index.tsx",[],"E:\\diaries-app\\src\\components\\DiaryContent\\index.tsx",["148","149","150","151","152","153","154","155"],"E:\\diaries-app\\src\\components\\MyDiaries\\index.tsx",["156","157"],"E:\\diaries-app\\src\\reducer\\entryReducer\\index.ts",["158","159"],"import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport http from \"../../services/api\";\r\ninterface FulfilledAction<ThunkArg, PromiseResult> {\r\n  type: string;\r\n  payload: PromiseResult;\r\n  meta: {\r\n    requestId: string;\r\n    arg: ThunkArg;\r\n  };\r\n}\r\nexport const addEntryReducer: any = createAsyncThunk(\r\n  \"RandomEntry\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Entry\", obj);\r\n    const response = await http.post(`/diaries/entry/${obj.id}/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const upadteEntryReducer: any = createAsyncThunk(\r\n  \"EditEntry\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Entry\", obj);\r\n    const response = await http.put(`/diaries/entry/${obj.id}/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const entrySlice = createSlice({\r\n  name: \"Entry Slice\",\r\n  initialState: {\r\n    entries: [],\r\n  },\r\n  reducers: {\r\n    removeEntries: (state: any): any => {\r\n      state.entries = [];\r\n      console.log(\"remove Entries\", state);\r\n    },\r\n    addAllEntries: (state: any, action: any) => {\r\n      console.log(\"ALll Entries ===>\", action.payload);\r\n      state.entries = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [addEntryReducer.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload;\r\n      console.log(\"data Of entry===>\", data);\r\n      const newObj = Object.assign({}, data);\r\n      state.entries = [...state.entries, newObj.entry];\r\n      // }\r\n    },\r\n    [addEntryReducer.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [addEntryReducer.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n    [upadteEntryReducer.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload;\r\n      const { id } = data;\r\n      const index = state.entries.findIndex((e: any) => e.id === id);\r\n      if (index !== -1) {\r\n        state.entries.splice(index, 1, data);\r\n      }\r\n      // }\r\n    },\r\n    [upadteEntryReducer.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [upadteEntryReducer.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n  },\r\n});\r\nexport const { removeEntries,addAllEntries } = entrySlice.actions;\r\nexport default entrySlice.reducer;\r\n","E:\\diaries-app\\src\\Interfaces\\diary.interface.ts",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":12},{"ruleId":"164","severity":1,"message":"168","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":9},{"ruleId":"164","severity":1,"message":"169","line":15,"column":30,"nodeType":"166","messageId":"167","endLine":15,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":49,"column":1,"nodeType":"172","endLine":52,"endColumn":3},{"ruleId":"164","severity":1,"message":"173","line":1,"column":20,"nodeType":"166","messageId":"167","endLine":1,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":12},{"ruleId":"164","severity":1,"message":"174","line":4,"column":23,"nodeType":"166","messageId":"167","endLine":4,"endColumn":34},{"ruleId":"164","severity":1,"message":"175","line":1,"column":32,"nodeType":"166","messageId":"167","endLine":1,"endColumn":45},{"ruleId":"164","severity":1,"message":"176","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"177","line":3,"column":3,"nodeType":"166","messageId":"167","endLine":3,"endColumn":9},{"ruleId":"164","severity":1,"message":"178","line":5,"column":3,"nodeType":"166","messageId":"167","endLine":5,"endColumn":7},{"ruleId":"164","severity":1,"message":"179","line":11,"column":10,"nodeType":"166","messageId":"167","endLine":11,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":28,"column":6,"nodeType":"182","endLine":28,"endColumn":12,"suggestions":"183"},{"ruleId":"164","severity":1,"message":"184","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":12},{"ruleId":"164","severity":1,"message":"185","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":15},{"ruleId":"164","severity":1,"message":"186","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":14},{"ruleId":"164","severity":1,"message":"187","line":12,"column":10,"nodeType":"166","messageId":"167","endLine":12,"endColumn":19},{"ruleId":"164","severity":1,"message":"188","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":23,"column":9,"nodeType":"191","endLine":23,"endColumn":74},{"ruleId":"189","severity":1,"message":"192","line":47,"column":17,"nodeType":"191","endLine":47,"endColumn":41},{"ruleId":"189","severity":1,"message":"192","line":52,"column":15,"nodeType":"191","endLine":52,"endColumn":56},{"ruleId":"164","severity":1,"message":"174","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":21},{"ruleId":"164","severity":1,"message":"193","line":14,"column":6,"nodeType":"166","messageId":"167","endLine":14,"endColumn":15},{"ruleId":"164","severity":1,"message":"194","line":72,"column":13,"nodeType":"166","messageId":"167","endLine":72,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":43,"column":54,"nodeType":"197","messageId":"198","endLine":43,"endColumn":56},{"ruleId":"164","severity":1,"message":"178","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"199","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":21},{"ruleId":"164","severity":1,"message":"184","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":12},{"ruleId":"164","severity":1,"message":"200","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":37,"column":1,"nodeType":"203","messageId":"204","endLine":41,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":42,"column":1,"nodeType":"203","messageId":"204","endLine":44,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":45,"column":1,"nodeType":"203","messageId":"204","endLine":47,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":48,"column":1,"nodeType":"203","messageId":"204","endLine":50,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":51,"column":1,"nodeType":"203","messageId":"204","endLine":59,"endColumn":2},{"ruleId":"164","severity":1,"message":"205","line":25,"column":18,"nodeType":"166","messageId":"167","endLine":25,"endColumn":22},{"ruleId":"164","severity":1,"message":"206","line":30,"column":10,"nodeType":"166","messageId":"167","endLine":30,"endColumn":19},{"ruleId":"164","severity":1,"message":"187","line":30,"column":32,"nodeType":"166","messageId":"167","endLine":30,"endColumn":41},{"ruleId":"164","severity":1,"message":"207","line":31,"column":10,"nodeType":"166","messageId":"167","endLine":31,"endColumn":15},{"ruleId":"164","severity":1,"message":"176","line":32,"column":10,"nodeType":"166","messageId":"167","endLine":32,"endColumn":14},{"ruleId":"180","severity":1,"message":"208","line":91,"column":6,"nodeType":"182","endLine":91,"endColumn":27,"suggestions":"209"},{"ruleId":"180","severity":1,"message":"210","line":101,"column":6,"nodeType":"182","endLine":101,"endColumn":8,"suggestions":"211"},{"ruleId":"201","severity":1,"message":"212","line":117,"column":5,"nodeType":"203","messageId":"213","endLine":119,"endColumn":6},{"ruleId":"180","severity":1,"message":"214","line":29,"column":6,"nodeType":"182","endLine":29,"endColumn":12,"suggestions":"215"},{"ruleId":"195","severity":1,"message":"196","line":36,"column":52,"nodeType":"197","messageId":"198","endLine":36,"endColumn":54},{"ruleId":"164","severity":1,"message":"216","line":1,"column":41,"nodeType":"166","messageId":"167","endLine":1,"endColumn":48},{"ruleId":"164","severity":1,"message":"217","line":3,"column":11,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'email' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'PayloadAction' is defined but never used.","'User' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'connectAdvanced' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLogin'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'http' is defined but never used.","'param' is defined but never used.","'Navbar' is defined but never used.","'stateType' is defined but never used.","'removeDiaries' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fulfilled' is defined but never used.","'newObj' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useDispatch' is defined but never used.","'addEntryReducer' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Form' is defined but never used.","'DiaryType' is defined but never used.","'Diary' is defined but never used.","React Hook useEffect has missing dependencies: 'diary', 'entry', 'id', 'isEditable', and 'user'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'entries', 'getEntry', and 'id'. Either include them or remove the dependency array.",["222"],"Nested block is redundant.","redundantNestedBlock","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["223"],"'current' is defined but never used.","'FulfilledAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [data, isLogin]",{"range":"232","text":"233"},"Update the dependencies array to be: [allDiaries, diary, entries, entry, id, isEditable, user]",{"range":"234","text":"235"},"Update the dependencies array to be: [entries, getEntry, id]",{"range":"236","text":"237"},"Update the dependencies array to be: [data, user]",{"range":"238","text":"239"},[853,859],"[data, isLogin]",[3526,3547],"[allDiaries, diary, entries, entry, id, isEditable, user]",[3849,3851],"[entries, getEntry, id]",[845,851],"[data, user]"]