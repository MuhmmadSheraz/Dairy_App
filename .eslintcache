[{"E:\\diaries-app\\src\\index.tsx":"1","E:\\diaries-app\\src\\reportWebVitals.ts":"2","E:\\diaries-app\\src\\App.tsx":"3","E:\\diaries-app\\src\\services\\mirage\\server.ts":"4","E:\\diaries-app\\src\\services\\mirage\\routes\\user.ts":"5","E:\\diaries-app\\src\\services\\api.ts":"6","E:\\diaries-app\\src\\utils.ts":"7","E:\\diaries-app\\src\\components\\Auth\\index.tsx":"8","E:\\diaries-app\\src\\store\\index.ts":"9","E:\\diaries-app\\src\\reducer\\rootReducer.ts":"10","E:\\diaries-app\\src\\reducer\\authReducer\\index.ts":"11","E:\\diaries-app\\src\\reducer\\userReducer\\index.ts":"12","E:\\diaries-app\\src\\config\\router.tsx":"13","E:\\diaries-app\\src\\components\\Home\\index.tsx":"14","E:\\diaries-app\\src\\components\\Navbar\\index.tsx":"15","E:\\diaries-app\\src\\services\\mirage\\routes\\dairy.ts":"16","E:\\diaries-app\\src\\reducer\\dairyReducer\\index.ts":"17","E:\\diaries-app\\src\\components\\Dairies\\index.tsx":"18","E:\\diaries-app\\src\\components\\Diary\\index.tsx":"19","E:\\diaries-app\\src\\services\\mirage\\routes\\entry.ts":"20","E:\\diaries-app\\src\\components\\Loader\\index.tsx":"21","E:\\diaries-app\\src\\components\\DiaryContent\\index.tsx":"22","E:\\diaries-app\\src\\components\\MyDiaries\\index.tsx":"23","E:\\diaries-app\\src\\reducer\\entryReducer\\index.ts":"24"},{"size":742,"mtime":1608478011714,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":398,"mtime":1608716999412,"results":"28","hashOfConfig":"26"},{"size":1560,"mtime":1609273509298,"results":"29","hashOfConfig":"26"},{"size":1666,"mtime":1608960611510,"results":"30","hashOfConfig":"26"},{"size":963,"mtime":1608979120634,"results":"31","hashOfConfig":"26"},{"size":576,"mtime":1608461033461,"results":"32","hashOfConfig":"26"},{"size":4433,"mtime":1609163716523,"results":"33","hashOfConfig":"26"},{"size":188,"mtime":1608479413848,"results":"34","hashOfConfig":"26"},{"size":354,"mtime":1609185605608,"results":"35","hashOfConfig":"26"},{"size":848,"mtime":1608549734946,"results":"36","hashOfConfig":"26"},{"size":506,"mtime":1608530037720,"results":"37","hashOfConfig":"26"},{"size":1332,"mtime":1609170777240,"results":"38","hashOfConfig":"26"},{"size":3375,"mtime":1609161748830,"results":"39","hashOfConfig":"26"},{"size":1745,"mtime":1609170845972,"results":"40","hashOfConfig":"26"},{"size":1774,"mtime":1609251949732,"results":"41","hashOfConfig":"26"},{"size":2753,"mtime":1609253521573,"results":"42","hashOfConfig":"26"},{"size":934,"mtime":1609171645468,"results":"43","hashOfConfig":"26"},{"size":1978,"mtime":1609186609016,"results":"44","hashOfConfig":"26"},{"size":1382,"mtime":1609273315533,"results":"45","hashOfConfig":"26"},{"size":288,"mtime":1609095652244,"results":"46","hashOfConfig":"26"},{"size":10117,"mtime":1609320964574,"results":"47","hashOfConfig":"26"},{"size":763,"mtime":1609171838755,"results":"48","hashOfConfig":"26"},{"size":2150,"mtime":1609274920252,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"oj2mi0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"E:\\diaries-app\\src\\index.tsx",[],["112","113"],"E:\\diaries-app\\src\\reportWebVitals.ts",[],"E:\\diaries-app\\src\\App.tsx",["114","115"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport $ from 'jquery';\n\nimport MainRouter from \"./config/router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Login /> */}\n      <MainRouter />  \n    </div>\n  );\n}\n\nexport default App;\n","E:\\diaries-app\\src\\services\\mirage\\server.ts",[],"E:\\diaries-app\\src\\services\\mirage\\routes\\user.ts",["116","117"],"import { Request, Response } from \"miragejs\";\r\nimport { handleError } from \"../server\";\r\nimport { User } from \"../../../Interfaces/user.interface\";\r\nimport { randomBytes } from \"crypto\";\r\n\r\nconst generateToken = () => randomBytes(8).toString(\"hex\");\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n//        Login...\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n  console.log(\"Schema===>\", schema);\r\n  console.log(\"Schema Data Base From Login===>\", JSON.parse(req.requestBody) );\r\n  const { userName, password,email } = JSON.parse(req.requestBody);\r\n  const user = schema.users.findBy({ userName }); // Will bring User Obj if Exits !\r\n  if (!user) {\r\n    return handleError(user, \"No user with that username exists\");\r\n  }\r\n  if (password !== user.password) {\r\n    return handleError(null, \"Incorrect Password, Please Try Again.\");\r\n  }\r\n  const token = generateToken(); //Token Will Generate..\r\n\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\n//              Sign Up...\r\nconst signup = (schema: any, req: Request): any => {\r\n  const data = JSON.parse(req.requestBody);\r\n  const exUser = schema.users.findBy({ userName: data.userName });\r\n  console.log(\"Sign Up Schema===>\", schema.users);\r\n  console.log(\"Sign Up data===>\", data);\r\n  console.log(\"found User\", exUser);\r\n  if (exUser) {\r\n    return handleError(null, \"A user with that username already exists.\");\r\n  }\r\n  const user = schema.users.create(data);\r\n  console.log(\"suspect User ==>\",user)\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\nexport default {\r\n  login,\r\n  signup,\r\n};\r\n","E:\\diaries-app\\src\\services\\api.ts",[],"E:\\diaries-app\\src\\utils.ts",[],"E:\\diaries-app\\src\\components\\Auth\\index.tsx",["118"],"import { useState, useEffect } from \"react\";\r\nimport \"./auth.css\";\r\nimport logo from \"../../assests/logo.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveToken } from \"../../reducer/authReducer\";\r\nimport { setUser } from \"../../reducer/userReducer\";\r\nimport http from \"../../services/api\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nimport { AuthResponse } from \"../../services/mirage/routes/user\";\r\nimport Loader from \"../Loader\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const Login = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"email@email.com\");\r\n  const [password, setPassword] = useState<string>(\"1025454545454\");\r\n  const [loader, setLoader] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector((state) => {\r\n    return state;\r\n  });\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(\"stateData UseEffect==>\", stateData);\r\n  }, [stateData]);\r\n  let obj = {\r\n    userName,\r\n    email,\r\n    password,\r\n    id: Math.floor(Math.random() * 100),\r\n  };\r\n  const login = () => {\r\n    setLoader(true);\r\n    const path = \"/auth/login\";\r\n    http.post<User | AuthResponse>(path, obj).then((res: any) => {\r\n      console.log(\"res Login==>\", res);\r\n      dispatch(\r\n        setUser({\r\n          user: res.user,\r\n        })\r\n      );\r\n      dispatch(\r\n        saveToken({\r\n          token: res.token,\r\n          isAuthenticated: true,\r\n        })\r\n      ); //Token\r\n    });\r\n    setLoader(false);\r\n    // navigate.push(\"/home\");\r\n    console.log(email, password, userName);\r\n\r\n    console.log(\"stateData==>\", stateData);\r\n    setUserName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    // history.push(\"/home\");\r\n  };\r\n  const signUp = () => {\r\n    setLoader(true);\r\n    const path = \"/auth/signup\";\r\n    http.post<User | AuthResponse>(path, obj).then((res: any) => {\r\n      console.log(\"res SignUp\", res);\r\n      dispatch(\r\n        setUser({\r\n          user: res.user,\r\n        })\r\n      );\r\n      dispatch(\r\n        saveToken({\r\n          token: res.token,\r\n          isAuthenticated: true,\r\n        })\r\n      ); //Token\r\n    });\r\n    history.push(\"/home\");\r\n    setLoader(false);\r\n  };\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"AuthWrapper\">\r\n      <div className=\"cardWrapper pt-5\">\r\n        <div className=\"authcard p-5\">\r\n          {/* <img className=\"imageWrapper appLogo\" src={logo} alt=\"AppLogo\" /> */}\r\n          {isLogin ? <h2>Login</h2> : <h2>Sign Up</h2>}\r\n          <div className=\"py-2\">UserName</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            type=\"name\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            placeholder=\"UserName\"\r\n          />\r\n          <div className=\"py-2\">E-mail Address</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Optional \"\r\n          />\r\n          <div className=\"py-2\">Password</div>\r\n          <input\r\n            className=\"inputBox\"\r\n            placeholder=\"Password\"\r\n            type=\"password  \"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {isLogin ? (\r\n            <button className=\"mt-3 btnLogin btn btn-block\" onClick={login}>\r\n              Login\r\n            </button>\r\n          ) : (\r\n            <button className=\"mt-3 btn btn-info btn-block\" onClick={signUp}>\r\n              Sign Up\r\n            </button>\r\n          )}\r\n          {isLogin ? (\r\n            <div className=\"text-center pt-3 \">\r\n              Don't Have Accout?{\" \"}\r\n              <span\r\n                className=\"text-primary hoverMe\"\r\n                onClick={() => setIsLogin(false)}\r\n              >\r\n                Create One\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center pt-3 \">\r\n              Already Have An Accoun?\r\n              <span\r\n                className=\"text-primary hoverMe\"\r\n                onClick={() => setIsLogin(true)}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\diaries-app\\src\\store\\index.ts",[],"E:\\diaries-app\\src\\reducer\\rootReducer.ts",[],"E:\\diaries-app\\src\\reducer\\authReducer\\index.ts",["119"],"import { createSlice, current, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface AuthState {\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n}\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n};\r\nexport const AuthSlice = createSlice({\r\n  name: \"AuthSlice\",\r\n  initialState,\r\n  reducers: {\r\n    saveToken: (state, { payload }: any) => {\r\n      if (payload) {\r\n        console.log(payload);\r\n        console.log(\"payload===>\", payload);\r\n        state.token = payload.token;\r\n        state.isAuthenticated = payload.isAuthenticated;\r\n      }\r\n    },\r\n    removeUser(state) {\r\n      console.log(\"remove State \", current(state));\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\nexport const { saveToken, removeUser } = AuthSlice.actions;\r\nexport default AuthSlice.reducer;\r\n","E:\\diaries-app\\src\\reducer\\userReducer\\index.ts",["120"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { User } from \"../../Interfaces/user.interface\";\r\nexport const userSlice = createSlice({\r\n  name: \"userSlice\",\r\n  initialState: null as User | null,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n        console.log(\"action.payload from Reducer===>\",action.payload)\r\n      return (state = action.payload);\r\n    },\r\n  },\r\n});\r\nexport const {setUser}= userSlice.actions\r\nexport default userSlice.reducer","E:\\diaries-app\\src\\config\\router.tsx",["121","122","123","124"],"import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport { Login } from \"../components/Auth/index\";\r\nimport Home from \"../components/Home/index\";\r\nimport { connectAdvanced, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport DiaryContent from \"../components/DiaryContent\";\r\nimport MyDiaries from \"../components/MyDiaries\";\r\n\r\nexport default function MainRouter() {\r\n  const data = useSelector((state: any) => {\r\n    console.log(state);\r\n    return state.authReducer.isAuthenticated;\r\n  });\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  useEffect(() => {\r\n    console.log(\"Navbarr===>\", data);\r\n    setIsLogin(data);\r\n    console.log(\"navbar 222\", isLogin);\r\n  }, [data]);\r\n  console.log(data);\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\">\r\n        {isLogin ? <Redirect to=\"/home\" /> : <Login />}\r\n      </Route>\r\n        <Navbar />\r\n      <Route path=\"/home\">\r\n        {!isLogin ? <Redirect to=\"/\" /> : <Home />}\r\n      </Route>\r\n      {/* <Navbar />   */}\r\n      <Route path=\"/diary/:id/\">\r\n        <DiaryContent />\r\n      </Route>\r\n      <Route path=\"/myDiaries/\">\r\n        <MyDiaries />\r\n      </Route>\r\n    </Router>\r\n  );\r\n}\r\n","E:\\diaries-app\\src\\components\\Home\\index.tsx",["125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./home.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport http from \"../../services/api\";\r\nimport Dairies from \"../Dairies\";\r\nimport { postDiary } from \"../../reducer/dairyReducer\";\r\nimport { param } from \"jquery\";\r\nconst Home = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [scope, setScope] = useState<any>(\"\");\r\n  const [user, setUser] = useState<any>(\"\");\r\n  const authUser: any = useSelector<any>((state) => {\r\n    return state.userReducer;\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(\"Home render===>\")\r\n    setUser(authUser);\r\n  }, [authUser]);\r\n  const toggle = () => {\r\n    console.log(\"User************\", user);\r\n    setModal(!modal);\r\n  };\r\n  const create = async () => {\r\n    // New**************************\r\n    let obj = {\r\n      title: title,\r\n      type: scope,\r\n      userId: user.user.id,\r\n    };\r\n    await dispatch(postDiary(obj));\r\n    toggle();\r\n\r\n    // http.post(\"/diaries/\", obj).then((e: any) => {\r\n    //   console.log(\"Dairy Response\", e);\r\n    //   // dispatch(addDairy(e));\r\n    //   const { user, diary } = e;\r\n    //   // dispatch(getDiaries(diary.userId));\r\n    //   // getDairies(diary.userId);\r\n    //   return Swal.fire({\r\n    //     titleText: \"All done!\",\r\n    //     confirmButtonText: \"OK!\",\r\n    //   });\r\n    // });\r\n    // if (diary && user) {\r\n    //   console.log(\"Dairy And User\", diary, user);\r\n\r\n    // }\r\n  };\r\n  const getDairies = (a: any) => {\r\n    console.log(\"API param\", a);\r\n    http.get(`/diaries/${a}`).then((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"homeWrapper\">\r\n      <Dairies />\r\n      {/* <button onClick={getDairies}>get All </button> */}\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Add Dairy</ModalHeader>\r\n        <ModalBody>\r\n          <label className=\"font-weight-bold\">Dairy Name</label>\r\n          <br />\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Enter Dairy Name\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <br />\r\n          <div className=\"mt-3\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"public\"\r\n              name=\"scope\"\r\n              value=\"Public\"\r\n              className=\"radio\"\r\n              onChange={(e) => setScope(e.target.value)}\r\n            />\r\n            <label style={{ fontSize: \"18px\" }}>Public</label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"private\"\r\n              name=\"scope\"\r\n              value=\"private\"\r\n              className=\"radio\"\r\n              onChange={(e) => setScope(e.target.value)}\r\n            />\r\n            <label style={{ fontSize: \"18px\" }}>Private</label>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={create}>\r\n            Create\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <button className=\"float\" onClick={toggle}>\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\diaries-app\\src\\components\\Navbar\\index.tsx",["127","128","129"],"import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport { removeUser } from \"../../reducer/authReducer/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => {\r\n    return state;\r\n  });\r\n  const logout = () => {\r\n    console.log(\"Logging Out\", data);\r\n    dispatch(removeUser());\r\n  };\r\n  return (\r\n    <div style={{ width: \"100vw\" }}>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n        <a className=\"navbar-brand font-weight-bold text-white\" href=\"#\">\r\n          DiaryApp\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link to=\"/home\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n\r\n            <Link to=\"/myDiaries/\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\">My Diaries</a>\r\n              </li>\r\n            </Link>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" onClick={logout}>\r\n                Logout\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\diaries-app\\src\\services\\mirage\\routes\\dairy.ts",[],"E:\\diaries-app\\src\\reducer\\dairyReducer\\index.ts",["130","131","132"],"import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport http from \"../../services/api\";\r\n\r\n//Interfaces\r\ninterface FulfilledAction<ThunkArg, PromiseResult> {\r\n  type: string;\r\n  payload: PromiseResult;\r\n  meta: {\r\n    requestId: string;\r\n    arg: ThunkArg;\r\n  };\r\n}\r\n\r\ntype Fulfilled = <ThunkArg, PromiseResult>(\r\n  payload: PromiseResult,\r\n  requestId: string,\r\n  arg: ThunkArg\r\n) => FulfilledAction<ThunkArg, PromiseResult>;\r\n\r\nexport const postDiary: any = createAsyncThunk(\r\n  \"/diaries/:id\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called\", obj);\r\n    const response = await http.post(`/diaries/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const updateDiaryContent: any = createAsyncThunk(\r\n  \"/s\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Update Diary\", obj);\r\n    const response = await http.put(`/diaries/${obj.id}`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const DairySlice = createSlice({\r\n  initialState: {\r\n    diaries: [],\r\n  },\r\n  name: \"DairySlice\",\r\n  reducers: {\r\n    addDairyq: (state, { payload }): any => {\r\n      console.log(\"Action PayLoad ==>\", payload);\r\n      const data: any[] = payload.diary;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [postDiary.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload.diary;\r\n      const newObj = Object.assign({}, data);\r\n      state.diaries = [...state.diaries, newObj];\r\n      // }\r\n    },\r\n    [postDiary.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [postDiary.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n    [updateDiaryContent.fulfilled]: (state: any, action: any) => {\r\n      console.log(\"Param Info ====>\", action.payload);\r\n      const data: any = action.payload;\r\n      const { id } = data;\r\n      const newObj = Object.assign({}, data);\r\n      const diaryIndex = state.diaries.find((diary: any) => diary.id === id);\r\n      console.log(\"find Data===>\", diaryIndex);\r\n      if (diaryIndex !== -1) {\r\n        console.log(\"find Data===>\", diaryIndex);\r\n        state.diaries.splice(diaryIndex, 1, newObj);\r\n      }\r\n      // state.splice(diaryIndex, 1, data);\r\n\r\n      // state.diaries = [...state.diaries, newObj];\r\n      // }\r\n    },\r\n    [updateDiaryContent.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [updateDiaryContent.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addDairyq } = DairySlice.actions;\r\nexport default DairySlice.reducer;\r\n","E:\\diaries-app\\src\\components\\Dairies\\index.tsx",["133"],"import Diary from \"../Diary\";\r\nimport \"./diary.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Dairies = () => {\r\n  const [diaries, setDiaries] = useState<any>([]);\r\n  const data = useSelector((state: any) => {\r\n    return state.dairyReducer.diaries;\r\n  });\r\n  useEffect(() => {\r\n    console.log(\"object--------------------------\");\r\n    setDiaries(data);\r\n    console.log(\"diaries\", data);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        {diaries &&\r\n          diaries.map((item: any, index: string) => {\r\n            if (item.type === \"Public\") {\r\n              return (\r\n                <div className=\"col-md-4\" key={index}>\r\n                  <Diary data={item} editable={false} />\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dairies;\r\n","E:\\diaries-app\\src\\components\\Diary\\index.tsx",["134","135","136","137","138","139","140","141","142","143"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport http from \"../../services/api\";\r\nimport \"./diary.css\";\r\nimport { addEntryReducer } from \"../../reducer/entryReducer\";\r\n\r\nconst Diary = ({ data, editable }: any) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const addEntry = (userId: any) => {\r\n    const path = `/diaries/entry/${userId}`;\r\n    http.post(path).then((res): any => {\r\n      console.log(\"entry Response==>\", res);\r\n    });\r\n  };\r\n  const getEntry = (userId: any) => {\r\n    const path = `/diaries/entry/${userId}`;\r\n    http.get(path).then((res): any => {\r\n      console.log(\"entry Response==>\", res);\r\n    });\r\n  };\r\n  console.log(\"]]]]]]]]]]]]]]]]]]]]]]]]]]]]\", editable);\r\n  // const go = () => {\r\n  //   console.log(\"go\")\r\n  //   <Link to=\"/diary\"/>\r\n  // };\r\n\r\n  return (\r\n    <div\r\n      className=\"DiaryCard\"\r\n      onClick={() => history.push(`/diary/${data.id}/`)}\r\n    >\r\n      <h2 className=\"text-white px-2 py-2 text-left\">{data.title}</h2>\r\n      <p className=\"text-info\">\r\n        Created At: <span className=\"text-white\">{data.createdAt}</span>{\" \"}\r\n      </p>\r\n      <p className=\"text-warning\">\r\n        Updated At: <span className=\"text-white\">{data.updatedAt}</span>{\" \"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n{\r\n  /* <Link to=\"/diary\">\r\n       Diary\r\n     </Link> */\r\n}\r\n{\r\n  /* <p>Updated At: {data.updatedAt}</p> */\r\n}\r\n{\r\n  /* <p className=\"text-muted\">Created At {data.createdAt}</p> */\r\n}\r\n{\r\n  /* <p className=\"text-muted\">Updated At {data.updatedAt}</p> */\r\n}\r\n{\r\n  /* Diary Type <span className=\"text-info mx-2\">{data.type}</span>\r\n      <button className=\"btn btn-success\" onClick={() => addEntry(data.id)}>\r\n        Add Entry\r\n      </button>\r\n      <button className=\"btn btn-success\" onClick={() => getEntry(data.id)}>\r\n        Get Entry\r\n      </button> */\r\n}\r\n","E:\\diaries-app\\src\\services\\mirage\\routes\\entry.ts",[],"E:\\diaries-app\\src\\components\\Loader\\index.tsx",[],"E:\\diaries-app\\src\\components\\DiaryContent\\index.tsx",["144","145","146"],"E:\\diaries-app\\src\\components\\MyDiaries\\index.tsx",["147"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Diary from \"../Diary\";\r\n\r\nconst MyDiaries = () => {\r\n  const [diaries, setDiaries] = useState<any>([]);\r\n  const data = useSelector((state: any) => {\r\n    return state.dairyReducer.diaries;\r\n  });\r\n  const user = useSelector((state: any) => {\r\n    return state.userReducer.user;\r\n  });\r\n  useEffect(() => {\r\n    const mine = data.filter((x: any) => x.userId === user.id);\r\n    setDiaries(mine);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"diaryContentWrapper\">\r\n      {diaries &&\r\n        diaries.map((item: any, index: string) => {\r\n          return <Diary data={item} editable={true} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDiaries;\r\n","E:\\diaries-app\\src\\reducer\\entryReducer\\index.ts",["148","149"],"import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport http from \"../../services/api\";\r\ninterface FulfilledAction<ThunkArg, PromiseResult> {\r\n  type: string;\r\n  payload: PromiseResult;\r\n  meta: {\r\n    requestId: string;\r\n    arg: ThunkArg;\r\n  };\r\n}\r\nexport const addEntryReducer: any = createAsyncThunk(\r\n  \"RandomEntry\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Entry\", obj);\r\n    const response = await http.post(`/diaries/entry/${obj.id}/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const upadteEntryReducer: any = createAsyncThunk(\r\n  \"EditEntry\",\r\n  async (obj: any) => {\r\n    console.log(\"Thunk Called For Entry\", obj);\r\n    const response = await http.put(`/diaries/entry/${obj.id}/`, obj);\r\n    console.log(\"await response.json()===>\", await response);\r\n    return await response;\r\n  }\r\n);\r\nexport const entrySlice = createSlice({\r\n  name: \"Entry Slice\",\r\n  initialState: {\r\n    entries: [],\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [addEntryReducer.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload;\r\n      console.log(\"data Of entry===>\", data);\r\n      const newObj = Object.assign({}, data);\r\n      state.entries = [...state.entries, newObj.entry];\r\n      // }\r\n    },\r\n    [addEntryReducer.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [addEntryReducer.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n    [upadteEntryReducer.fulfilled]: (state: any, action: any) => {\r\n      const data: any = action.payload;\r\n      const { id } = data;\r\n      const index = state.entries.findIndex((e: any) => e.id === id);\r\n      if (index !== -1) {\r\n        state.entries.splice(index, 1, data);\r\n      }\r\n      // }\r\n    },\r\n    [upadteEntryReducer.pending]: (state: any, action: any) => {\r\n      return console.log(\"Pending \");\r\n    },\r\n    [upadteEntryReducer.reject]: (state: any, action: any) => {\r\n      return console.log(\"Error Found \");\r\n    },\r\n  },\r\n});\r\nexport default entrySlice.reducer;\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":9},{"ruleId":"154","severity":1,"message":"159","line":15,"column":30,"nodeType":"156","messageId":"157","endLine":15,"endColumn":35},{"ruleId":"160","severity":1,"message":"161","line":49,"column":1,"nodeType":"162","endLine":52,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"163","line":1,"column":32,"nodeType":"156","messageId":"157","endLine":1,"endColumn":45},{"ruleId":"154","severity":1,"message":"164","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"154","severity":1,"message":"165","line":3,"column":3,"nodeType":"156","messageId":"157","endLine":3,"endColumn":9},{"ruleId":"154","severity":1,"message":"166","line":5,"column":3,"nodeType":"156","messageId":"157","endLine":5,"endColumn":7},{"ruleId":"154","severity":1,"message":"167","line":11,"column":10,"nodeType":"156","messageId":"157","endLine":11,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":28,"column":6,"nodeType":"170","endLine":28,"endColumn":12,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"172","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":15},{"ruleId":"154","severity":1,"message":"173","line":52,"column":9,"nodeType":"156","messageId":"157","endLine":52,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":18,"column":9,"nodeType":"176","endLine":18,"endColumn":74},{"ruleId":"174","severity":1,"message":"177","line":42,"column":17,"nodeType":"176","endLine":42,"endColumn":41},{"ruleId":"174","severity":1,"message":"177","line":47,"column":15,"nodeType":"176","endLine":47,"endColumn":56},{"ruleId":"154","severity":1,"message":"178","line":1,"column":41,"nodeType":"156","messageId":"157","endLine":1,"endColumn":48},{"ruleId":"154","severity":1,"message":"179","line":14,"column":6,"nodeType":"156","messageId":"157","endLine":14,"endColumn":15},{"ruleId":"154","severity":1,"message":"180","line":46,"column":13,"nodeType":"156","messageId":"157","endLine":46,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":19,"column":50,"nodeType":"183","messageId":"184","endLine":19,"endColumn":52},{"ruleId":"154","severity":1,"message":"166","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"185","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":25},{"ruleId":"154","severity":1,"message":"186","line":10,"column":9,"nodeType":"156","messageId":"157","endLine":10,"endColumn":17},{"ruleId":"154","severity":1,"message":"187","line":12,"column":9,"nodeType":"156","messageId":"157","endLine":12,"endColumn":17},{"ruleId":"154","severity":1,"message":"188","line":18,"column":9,"nodeType":"156","messageId":"157","endLine":18,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":47,"column":1,"nodeType":"191","messageId":"192","endLine":51,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":52,"column":1,"nodeType":"191","messageId":"192","endLine":54,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":55,"column":1,"nodeType":"191","messageId":"192","endLine":57,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":58,"column":1,"nodeType":"191","messageId":"192","endLine":60,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":61,"column":1,"nodeType":"191","messageId":"192","endLine":69,"endColumn":2},{"ruleId":"154","severity":1,"message":"193","line":24,"column":18,"nodeType":"156","messageId":"157","endLine":24,"endColumn":22},{"ruleId":"168","severity":1,"message":"194","line":77,"column":6,"nodeType":"170","endLine":77,"endColumn":27,"suggestions":"195"},{"ruleId":"189","severity":1,"message":"196","line":93,"column":5,"nodeType":"191","messageId":"197","endLine":95,"endColumn":6},{"ruleId":"168","severity":1,"message":"198","line":16,"column":6,"nodeType":"170","endLine":16,"endColumn":12,"suggestions":"199"},{"ruleId":"154","severity":1,"message":"178","line":1,"column":41,"nodeType":"156","messageId":"157","endLine":1,"endColumn":48},{"ruleId":"154","severity":1,"message":"200","line":3,"column":11,"nodeType":"156","messageId":"157","endLine":3,"endColumn":26},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'email' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'PayloadAction' is defined but never used.","'act' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'connectAdvanced' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLogin'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'param' is defined but never used.","'getDairies' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'current' is defined but never used.","'Fulfilled' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'addEntryReducer' is defined but never used.","'dispatch' is assigned a value but never used.","'addEntry' is assigned a value but never used.","'getEntry' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'diary', 'entry', 'id', 'isEditable', and 'user.id'. Either include them or remove the dependency array.",["204"],"Nested block is redundant.","redundantNestedBlock","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["205"],"'FulfilledAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [data, isLogin]",{"range":"212","text":"213"},"Update the dependencies array to be: [allDiaries, diary, entries, entry, id, isEditable, user.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [data, user.id]",{"range":"216","text":"217"},[853,859],"[data, isLogin]",[2872,2893],"[allDiaries, diary, entries, entry, id, isEditable, user.id]",[505,511],"[data, user.id]"]